* Selenium Class 3

* Why do we need Xpath & CSS Selector ?
- Developers will NOT provide all locators in HTML.
- By using XPath & CSS we can identify elements with any given attributes.

* What is an XPath ?
- Is like a query language which helps us to identify elements uniquely on the webpage.

***** 2 Types of XPath ******
1) Absolute XPath : Starts from starting nobe in HTML
                    It always starts with single slash (/)
- EXAMPLE : /html/body/div/div/div

2) Relative XPath : Starts from any nobe in the HTML
                    It always starts with double slash(//)
- SYNTAX : //tagname[@attribute = 'attribute value']
- EXAMPLE : //input[@id = 'email']

* Attribute :
- id,name,class etc

* Attribute Value :
- assigned to attribute "email","pass"

* text : (Identifying Elements by text)
- SYNTAX : //tagname[text() = 'text value']
- EXAMPLE : //h2[text() = 'Connect with friends and the world around you on Facebook.']

* contains : (Identifying elements by using contains)
- SYNTAX : //tagname[contains(@attributes, 'partial attribute value')]
- EXAMPLE : //input[contains(@placeholder,'Email')]

* Starts-with : (Identify the element with partial starting value)
- SYNTAX : //tagname[starts-with(@attribute, 'partial starting attribute value')]
- EXAMPLE : //button[starts-with(@data-testid, 'royal')]

* ends-with : (was used in xpath 1.0, we are using 2.0 & this method is not available)

**** TAG NAME ****
- <div> (Division)
- <img> (Image)
- <h> (Header)
- <p> (Paragraph)
- <li> (List)
- <ul> (Un-ordered list)
- <ol> (Ordered list)
- <br> (Breaking line)

****** Advanced Xpath ******
- Is based on parent & child, sibling relationship.

* following-sibling : (Identifying elements by following sibling)
- SYNTAX : //tagname[@attribute = 'attribute value']/following-sibling::TagName

* preceding-sibling : (identifying elements by preceding siblings)
- SYNTAX : //tagname[@attribute = 'attribute value']/preceding-sibling::TagName
- EXAMPLE : //span[text() = '& Orders']/preceding-sibling::span

* parent : (Identifying elements by parents)
- SYNTAX : //tagname[@attribute = 'attribute value']/parent::parentTagName
- EXAMPLE : //span[text() = '& Orders']/parent::a

* ancestor : (Identifying elements by its ancestor)
- SYNTAX : //tagname[@attribute = 'attribute value']/ancestor::ancestorTagName
- EXAMPLE : //input[@id = 'email']/ancestor::form